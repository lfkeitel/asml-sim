; Print "Hello" using a print function

; This example uses the convential ASML runtime. See runtime.asml for the implementation. The runtime takes 16 bytes.

; Import runtime code
; Available lables:
;   ~exit
;   ~return
@runtime

; Called by runtime bootstrap
:main
    ; Print H
    LOADI %1 'H'
    LOADI %F ~$+4
    JMP %0 ~print
    ; Print e
    LOADI %1 'e'
    LOADI %F ~$+4
    JMP %0 ~print
    ; Print ll
    LOADI %1 'l'
    LOADI %F ~$+4
    JMP %0 ~print
    LOADI %1 'l'
    LOADI %F ~$+4
    JMP %0 ~print
    ; Print o
    LOADI %1 'o'
    LOADI %F ~exit
    JMP %0 ~print

; Subroutines

; Print the argument in R1
:print
    ; Push return address to stack
    STRR %E %F
    ADD %E %E %C

    ; Print arg 1
    STRA %1 0xFF

    ; Call another function for demo
    LOADI %F ~$+4
    JMP %0 ~increment_F0

    ; Pop return address from stack
    ADD %E %E %D
    LOADR %F %E

    ; Return
    JMP %0 ~return

; increment_F0 is used to demonstrate a function call from a called function
; basically to show how the stack is used to save old link addresses and restored
; when the called function returns. Used by :print above
:increment_F0
    LOADA %1 0xF0
    ADD %1 %1 %D
    STRA %1 0xF0
    JMP %0 ~return
